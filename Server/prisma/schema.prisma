generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model aluno {
  token_acesso String    @default(uuid())
  nome         String?   @db.VarChar(45)
  nascimento   DateTime? @db.Date
  objetivo     String?   @db.VarChar(255)

  professor_usuario treinador? @relation(fields: [treinador_usuario], references: [usuario])
  treinador_usuario String?    @db.VarChar(255)

  treino                treino[]
  dado_sono             dado_sono[]
  dados_corporais_aluno dados_corporais_aluno[]
  rotina                rotina[]

  @@id([token_acesso])
}

model conjunto_serie {
  exercicio    exercicio @relation(fields: [id_exercicio], references: [id_exercicio])
  id_exercicio Int

  id_treino      Int
  qtd_series     Int?
  tempo_descanso Int?
  qtd_repeticoes Int?

  @@id([id_exercicio, id_treino])
}

model dado_sono {
  id_dado_relogio Int @id

  token_acesso String
  aluno        aluno  @relation(fields: [token_acesso], references: [token_acesso])

  tipo        String?   @db.VarChar(45)
  valor       String?   @db.VarChar(45)
  data_coleta DateTime? @db.Timestamp(0)

  @@index([token_acesso], map: "fk_dado_relogio_Aluno1")
}

model dados_corporais_aluno {
  data_medicao                 DateTime @db.Date
  outros_dados_corporais_aqui_ String?  @map("(outros dados corporais aqui)") @db.VarChar(45)

  token_acesso String
  aluno        aluno  @relation(fields: [token_acesso], references: [token_acesso])

  @@id([data_medicao, token_acesso])
  @@index([token_acesso], map: "fk_Dados_corporais_Aluno_Aluno1")
}

model exercicio {
  id_exercicio   Int              @id @default(autoincrement())
  nome           String?          @db.VarChar(255)
  tipo           String?          @db.VarChar(255)
  grupo_muscular String?          @db.VarChar(45)
  conjunto_serie conjunto_serie[]

  Treinador_usuario String    @db.VarChar(255)
  treinador         treinador @relation(fields: [Treinador_usuario], references: [usuario])

  @@index([Treinador_usuario], map: "fk_Exercicio_Treinador1")
}

model performance_treino_serie {
  id_treino       Int
  dia_execucao    DateTime @db.Date
  id_exercicio    Int
  Serie_id_treino Int
  n_execucao      Int

  @@id([id_treino, dia_execucao, id_exercicio, Serie_id_treino, n_execucao])
  @@index([id_exercicio, Serie_id_treino], map: "fk_Performance_Treino_Serie_Conjunto_Serie1")
}

model rotina {
  nome_rotina String @db.VarChar(255)

  token_acesso String
  aluno        aluno    @relation(fields: [token_acesso], references: [token_acesso])
  treino       treino[]

  @@id([nome_rotina, token_acesso])
  @@index([token_acesso], map: "fk_Rotina_Aluno1")
}

model secao_treino {
  id_treino    Int
  dia_execucao DateTime @db.Date

  treino treino @relation(fields: [id_treino], references: [id_treino])

  @@id([id_treino, dia_execucao])
}

model treinador {
  usuario String  @id @db.VarChar(255)
  senha   String  @db.VarChar(64)
  email   String? @db.VarChar(45)

  CPF  String? @db.VarChar(11)
  nome String? @db.VarChar(255)
  CREF String? @db.VarChar(255)

  aluno     aluno[]
  exercicio exercicio[]
}

model treino {
  id_treino   Int    @id @default(autoincrement())
  nome_rotina String @db.VarChar(255)

  token_acesso String
  aluno        aluno  @relation(fields: [token_acesso], references: [token_acesso])
  rotina       rotina @relation(fields: [nome_rotina, token_acesso], references: [nome_rotina, token_acesso])

  dias_atribuidos String? @db.VarChar(255)

  secao_treino secao_treino[]

  @@index([nome_rotina, token_acesso], map: "fk_Treino_Rotina1")
}
